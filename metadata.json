{
  "src/App.jsx": "This is the main application component that serves as the root of the EcoReward app. It sets up the routing system using React Router, defines the overall layout structure with a gradient background, and includes the navigation bar and main content area. The component establishes three main routes: Dashboard (home page), Scanner (QR code scanning), and Wallet (token management). It provides the foundational structure that connects all other components together. Keywords: ['React', 'Router', 'Navigation', 'Layout', 'App Structure']. component_type: ['layout']. functionality: ['Sets up the main application routing and layout structure with navigation and page components']. use_case: ['Main entry point for the application', 'Routing between different app sections']. related_files: ['src/components/Navbar.jsx', 'src/pages/Dashboard.jsx', 'src/pages/Scanner.jsx', 'src/pages/Wallet.jsx']",
  "src/components/Navbar.jsx": "This component creates a responsive navigation bar for the EcoReward app. It features a fixed header with the app logo and brand name, along with navigation links to Dashboard, Scanner, and Wallet pages. The navbar includes a mobile hamburger menu that slides down on smaller screens, with smooth animations powered by Framer Motion. It uses React Router's useLocation hook to highlight the currently active page and provides a clean, modern design with green accent colors that match the eco-friendly theme. Keywords: ['Navigation', 'Responsive', 'Mobile Menu', 'Router', 'Animation']. component_type: ['UI']. functionality: ['Provides main navigation between app pages with responsive mobile menu']. use_case: ['Site navigation', 'Mobile responsive design', 'Page routing']. related_files: ['src/App.jsx', 'src/pages/Dashboard.jsx', 'src/pages/Scanner.jsx', 'src/pages/Wallet.jsx']",
  "src/pages/Dashboard.jsx": "This is the main Dashboard page that serves as the home screen for users when they open the EcoReward app. It displays key statistics like total tokens earned, daily scans, and global ranking in colorful stat cards. The page includes quick action buttons to navigate to the scanner and wallet, shows recent scanning activity, and displays achievement badges that users can unlock by reaching certain milestones. The component uses local storage to persist user data and provides an engaging overview of the user's eco-friendly activities and progress. Keywords: ['Dashboard', 'Statistics', 'Achievements', 'User Progress', 'Local Storage']. component_type: ['layout']. functionality: ['Displays user statistics, achievements, and provides quick navigation to main app features']. use_case: ['Home page', 'User progress tracking', 'App overview']. related_files: ['src/App.jsx', 'src/components/Card.jsx', 'src/components/Button.jsx']",
  "src/pages/Scanner.jsx": "This is the QR Code Scanner page where users can scan eco-friendly products to earn EcoTokens. The component simulates the scanning process with different states: ready to scan, scanning in progress, product found, and reward claiming. It includes options for both camera scanning and file upload, with smooth animations throughout the user journey. When a product is successfully scanned, it updates the user's statistics in local storage and displays a celebratory reward modal. The page also shows a list of eligible eco-friendly products that can be scanned for tokens, helping users understand what products are supported. Keywords: ['QR Scanner', 'Token Rewards', 'Product Recognition', 'File Upload', 'Simulation']. component_type: ['functional']. functionality: ['Simulates QR code scanning process and awards tokens for eco-friendly products']. use_case: ['Product scanning', 'Token earning', 'Reward claiming']. related_files: ['src/App.jsx', 'src/components/Card.jsx', 'src/components/Button.jsx']",
  "src/pages/Wallet.jsx": "This is the Wallet page where users can manage their EcoTokens and view their crypto wallet information. It displays the current token balance in an attractive gradient card, shows the wallet address with a copy function, and includes send/receive buttons for token transfers. The page features a comprehensive transaction history showing both earned tokens from scanning and sent tokens to other addresses. It also includes token statistics like current price and market data, plus quick action buttons for blockchain explorer access and wallet management. The send functionality includes a modal form for transferring tokens to other addresses. Keywords: ['Crypto Wallet', 'Token Balance', 'Transactions', 'Send Tokens', 'Blockchain']. component_type: ['functional']. functionality: ['Manages EcoToken wallet with balance display, transaction history, and token transfer capabilities']. use_case: ['Token management', 'Transaction tracking', 'Crypto transfers']. related_files: ['src/App.jsx', 'src/components/Card.jsx', 'src/components/Button.jsx']",
  "src/components/Button.jsx": "This is a versatile Button component that provides consistent styling and behavior across the app. It supports multiple variants (primary, outline, ghost) and sizes (small, medium, large) to accommodate different use cases. The component includes smooth hover and tap animations using Framer Motion, making interactions feel responsive and polished. It handles disabled states appropriately and includes proper focus management for accessibility. The button can accept icons, text, or other React elements as children, making it highly flexible for various interface needs throughout the application. Keywords: ['Interactive', 'Reusable', 'Animation', 'Accessibility', 'Variants']. component_type: ['UI']. functionality: ['Provides a styled, interactive button component with multiple variants and animations']. use_case: ['Form submissions', 'Navigation actions', 'Interactive controls']. related_files: ['src/pages/Dashboard.jsx', 'src/pages/Scanner.jsx', 'src/pages/Wallet.jsx']",
  "src/components/Card.jsx": "This is a reusable Card component that creates consistent styled containers throughout the app. It provides a clean white background with rounded corners, subtle shadows, and padding for content. The component includes an optional hover effect using Framer Motion that slightly lifts the card and enhances the shadow when users hover over it. This creates an interactive and polished user experience. The component accepts custom className props for additional styling and can be used to display various types of content like statistics, forms, or information blocks. Keywords: ['Reusable', 'Container', 'Hover Effects', 'Animation', 'UI Component']. component_type: ['UI']. functionality: ['Provides a styled container component with optional hover animations']. use_case: ['Content containers', 'Information display', 'Interactive elements']. related_files: ['src/pages/Dashboard.jsx', 'src/pages/Scanner.jsx', 'src/pages/Wallet.jsx']",
  "src/utils/motion.js": "This utility file contains reusable Framer Motion animation configurations for consistent animations across the application. It includes fade-in, slide-in, scale-in animations, and stagger effects for animating lists or groups of elements. These presets help maintain consistent timing and easing throughout the app. Keywords: ['animations', 'framer-motion', 'utilities', 'transitions']. component_type: ['utility']. functionality: ['Provides reusable animation presets for consistent motion design across components']. use_case: ['Page transitions', 'Element animations', 'Staggered list animations']. related_files: ['src/pages/Dashboard.jsx', 'src/pages/Scanner.jsx', 'src/pages/Wallet.jsx', 'src/components/Card.jsx']"
}